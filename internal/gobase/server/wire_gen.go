// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"github.com/fizzse/gobase/internal/gobase/biz"
	"github.com/fizzse/gobase/internal/gobase/dao"
	"github.com/fizzse/gobase/internal/gobase/server/consumer"
	"github.com/fizzse/gobase/internal/gobase/server/rest"
	"github.com/fizzse/gobase/internal/gobase/server/rpc"
	"github.com/fizzse/gobase/pkg/cache/redis"
	"github.com/fizzse/gobase/pkg/db"
	"github.com/fizzse/gobase/pkg/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() (*App, func(), error) {
	config := LoadLoggerConfig()
	sugaredLogger, err := logger.New(config)
	if err != nil {
		return nil, nil, err
	}
	restConfig := LoadRestConfig()
	dbConfig := LoadDbConfig()
	dbCtx, cleanup, err := db.NewConn(dbConfig)
	if err != nil {
		return nil, nil, err
	}
	redisConfig := LoadRedisConfig()
	client, cleanup2, err := redis.NewClient(redisConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	sampleDao, cleanup3, err := dao.NewInstance(dbCtx, client)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	sampleBiz, cleanup4, err := biz.NewInstance(sampleDao)
	if err != nil {
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	server, err := rest.New(restConfig, sampleBiz)
	if err != nil {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	rpcConfig := LoadGrpcConfig()
	rpcServer, err := rpc.New(rpcConfig, sampleBiz)
	if err != nil {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	workerConfig := LoadConsumerConfig()
	worker, err := consumer.NewWorker(sugaredLogger, workerConfig, sampleBiz)
	if err != nil {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	app, cleanup5, err := NewApp(sugaredLogger, server, rpcServer, worker)
	if err != nil {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return app, func() {
		cleanup5()
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

// wire.go:

var (
	logProvider      = wire.NewSet(logger.New, LoadLoggerConfig)
	dbProvider       = wire.NewSet(db.NewConn, LoadDbConfig)
	redisProvider    = wire.NewSet(redis.NewClient, LoadRedisConfig)
	daoProvider      = wire.NewSet(dao.NewInstance)
	bizProvider      = wire.NewSet(biz.NewInstance)
	grpcProvider     = wire.NewSet(rpc.New, LoadGrpcConfig)
	restProvider     = wire.NewSet(rest.New, LoadRestConfig)
	consumerProvider = wire.NewSet(consumer.NewWorker, LoadConsumerConfig)
)
